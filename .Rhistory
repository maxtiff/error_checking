##    Improve documentation universality, and naming conventions.
##
set.BaseURL <- function() {
return("http://api.stlouisfed.org/fred")
}
get.BaseURL <- function() {
return(set.BaseURL())
}
set.Dir <- function() {
base <- get.BaseURL()
dir <- 'series'
return(paste(base,dir, sep="/"))
}
get.Dir <- function() {
return(set.Dir())
}
set.Type <- function() {
return('observations')
}
get.Type <- function() {
base<- get.Dir()
type <- set.Type()
return(paste(base, type, sep="/"))
}
test <- get.Type()
test
source('~/scripts/error_checking/novelty_detection.R')
source('~/scripts/error_checking/novelty_detection.R')
source('~/scripts/error_checking/novelty_detection.R')
source('~/scripts/error_checking/novelty_detection.R')
source('~/scripts/error_checking/novelty_detection.R', echo=TRUE)
source('~/scripts/error_checking/novelty_detection.R')
metadata
set.BaseURL <- function() {
return("http://api.stlouisfed.org/fred")
}
get.BaseURL <- function() {
return(set.BaseURL())
}
set.Dir <- function() {
base <- get.BaseURL()
dir <- 'series'
return(paste(base,dir, sep="/"))
}
get.Dir <- function() {
return(set.Dir())
}
set.Type <- function() {
return('observations')
}
get.Type <- function() {
base<- get.Dir()
type <- set.Type()
return(paste(base, type, sep="/"))
}
test <- get.Type()
test
##    This module loads all URL information to call previous vintage from FRED API.
##    Improve documentation universality, and naming conventions.
##
set.BaseURL <- function() {
return("http://api.stlouisfed.org/fred")
}
get.BaseURL <- function() {
return(set.BaseURL())
}
set.Dir <- function() {
base <- get.BaseURL()
dir <- 'series'
return(paste(base,dir, sep="/"))
}
get.Dir <- function() {
return(set.Dir())
}
set.Type <- function() {
return('observations')
}
get.Type <- function() {
base<- get.Dir()
type <- set.Type()
return(paste(base, type, sep="/"))
}
set.APIKey <- function() {
return("api_key=76bb1186e704598b725af0a27159fdfc")
}
get.APIkey <- function() {
base <- get.Type()
key <- set.APIKey()
return(paste(base,key,sep="?"))
}
test <- get.APIkey
test <- get.APIkey()
ls
test
get.metadata <- function(series) {
# pulls information about series from API
base <- get.Dir()
api <- set.APIkey()
series_id <- paste('series_id=',series,sep="")
return(paste(base,api,series_id,sep="&"))
}
test <- get.metadata()
source('~/scripts/error_checking/test_loader.R')
test <- get.metadata()
source('~/scripts/error_checking/test_loader.R')
test <- get.metadata()
test <- get.metadata('DGORDER')
test
get.metadata <- function(series) {
# pulls information about series from API
base <- get.Dir()
key <- set.APIKey()
api <- paste('?',api,sep="")
series_id <- paste('series_id=',series,sep="")
return(paste(base,api,series_id,sep="&"))
}
test <- get.metadata('DGORDER')
get.metadata <- function(series) {
# pulls information about series from API
base <- get.Dir()
key <- set.APIKey()
api <- paste('?',key,sep="")
series_id <- paste('series_id=',series,sep="")
return(paste(base,api,series_id,sep="&"))
}
test <- get.metadata('DGORDER')
test
source('~/scripts/error_checking/test_loader.R')
test <- get.metadata('DGORDER')
test
##    This module loads all URL information to call previous vintage from FRED API.
##    Improve documentation universality, and naming conventions.
##
set.BaseURL <- function() {
return("http://api.stlouisfed.org/fred")
}
get.BaseURL <- function() {
return(set.BaseURL())
}
set.Dir <- function() {
return('series')
}
get.Dir <- function() {
return(set.Dir())
}
set.Type <- function() {
return('observations')
}
get.Type <- function() {
return(set.Type())
}
set.Units <- function() {
return("units=pch")
}
get.Units <- function() {
return(set.Units())
}
set.APIKey <- function() {
return("api_key=76bb1186e704598b725af0a27159fdfc")
}
get.APIkey <- function() {
return(set.APIKey())
}
set.typeURL <- function() {
base <- get.BaseURL()
dir <- get.Dir()
type <- get.Type()
return(paste(base,dir,type,sep="/")
}
get.typeURL <- function() {
return(set.typeURL())
}
##    This module loads all URL information to call previous vintage from FRED API.
##    Improve documentation universality, and naming conventions.
##
set.BaseURL <- function() {
return("http://api.stlouisfed.org/fred")
}
get.BaseURL <- function() {
return(set.BaseURL())
}
set.Dir <- function() {
return('series')
}
get.Dir <- function() {
return(set.Dir())
}
set.Type <- function() {
return('observations')
}
get.Type <- function() {
return(set.Type())
}
set.Units <- function() {
return("units=pch")
}
get.Units <- function() {
return(set.Units())
}
set.APIKey <- function() {
return("api_key=76bb1186e704598b725af0a27159fdfc")
}
get.APIkey <- function() {
return(set.APIKey())
}
set.typeURL <- function() {
base <- get.BaseURL()
dir <- get.Dir()
type <- get.Type()
return(paste(base,dir,type,sep="/"))
}
get.typeURL <- function() {
return(set.typeURL())
}
test <- get.typeURL()
test
##    This module loads all URL information to call previous vintage from FRED API.
##    Improve documentation universality, and naming conventions.
##
set.BaseURL <- function() {
return("http://api.stlouisfed.org/fred")
}
get.BaseURL <- function() {
return(set.BaseURL())
}
set.Dir <- function() {
return('series')
}
get.Dir <- function() {
return(set.Dir())
}
set.Type <- function() {
return('observations')
}
get.Type <- function() {
return(set.Type())
}
set.Units <- function() {
base <- "units"
units <- "pch"
return(paste(base,units,sep="="))
}
get.Units <- function() {
return(set.Units())
}
set.APIKey <- function() {
return("api_key=76bb1186e704598b725af0a27159fdfc")
}
get.APIkey <- function() {
return(set.APIKey())
}
set.dirURL <- function() {
base <- get.BaseURL()
dir <- get.Dir()
return(paste(base,dir,sep="/"))
}
get.dirURL <- function() {
return(set.dirURL())
}
set.typeURL <- function() {
base <- get.dirURL()
type <- get.Type()
return(paste(base,type,sep="/"))
}
get.typeURL <- function() {
return(set.typeURL())
}
test <- get.typeURL()
test
test <- get.dirURL()
test
##    This module loads all URL information to call previous vintage from FRED API.
##    Improve documentation universality, and naming conventions.
##
set.BaseURL <- function() {
return("http://api.stlouisfed.org/fred")
}
get.BaseURL <- function() {
return(set.BaseURL())
}
set.Dir <- function() {
return('series')
}
get.Dir <- function() {
return(set.Dir())
}
set.Type <- function() {
return('observations')
}
get.Type <- function() {
return(set.Type())
}
set.Units <- function() {
base <- "units"
units <- "pch"
return(paste(base,units,sep="="))
}
get.Units <- function() {
return(set.Units())
}
set.fileType <- function() {
base <- "file_type"
type <- "JSON"
return(paste(base,type,sep=""))
}
get.fileType <- function() {
return(set.fileType())
}
set.APIKey <- function() {
base <- "api_key"
key <- "76bb1186e704598b725af0a27159fdfc"
return(paste(base,key,sep="="))
}
get.APIkey <- function() {
return(set.APIKey())
}
set.dirURL <- function() {
base <- get.BaseURL()
dir <- get.Dir()
return(paste(base,dir,sep="/"))
}
get.dirURL <- function() {
return(set.dirURL())
}
set.typeURL <- function() {
base <- get.dirURL()
type <- get.Type()
return(paste(base,type,sep="/"))
}
get.typeURL <- function() {
return(set.typeURL())
}
get.metadata <- function(series) {
# pulls information about series from API
# needs restructured
base <- get.dirURL()
key <- get.APIKey()
api <- paste(base,key,sep="?")
series_id <- paste(api,sep="")
return(paste(series_id,sep=""))
}
test <- get.metadata('DGORDER')
get.APIKey <- function() {
return(set.APIKey())
}
test <- get.metadata('DGORDER')
test
source('~/scripts/error_checking/api_loader.R')
source('~/scripts/error_checking/novelty_detection.R')
source('~/scripts/error_checking/novelty_detection.R')
View(window)
View(data)
test <- get.metadata('dgorder')
test
get.metadata <- function(series) {
# pulls information about series from API
# needs restructured
base <- get.dirURL()
key <- get.APIKey()
api <- paste(base,key,sep="?")
series_id <- paste(api,sep="")
meta.url <- paste(series_id,sep="")
return(fromJSON(meta.url))
}
test <- get.metadata('DGORDER')
source('~/scripts/error_checking/api_loader.R')
test <- get.metadata('DGORDER')
source('~/scripts/error_checking/api_loader.R')
test <- get.metadata('DGORDER')
test
get.metadata <- function(series) {
# pulls information about series from API
# needs restructured
base <- get.dirURL()
key <- get.APIKey()
api <- paste(base,key,sep="?")
series_id <- series
meta.url <- paste(api,series_id,sep="&")
return(fromJSON(meta.url))
}
test <- get.metadata('DGORDER')
test
source('~/scripts/error_checking/api_loader.R')
test <- get.metadata('DGORDER')
test
source('~/scripts/error_checking/api_loader.R')
test <- get.metadata('DGORDER')
test
get.metadata <- function(series) {
# pulls information about series from API
# needs restructured
base <- get.dirURL()
key <- get.APIKey()
api <- paste(base,key,sep="?")
series_base <- "series_id"
series_id <- paste(series_base,series,sep="=")
meta.url <- paste(api,series_id,sep="&")
return(fromJSON(meta.url))
}
test <- get.metadata('DGORDER')
get.metadata <- function(series) {
# pulls information about series from API
# needs restructured
base <- get.dirURL()
key <- get.APIKey()
api <- paste(base,key,sep="?")
series.base <- "series.id"
series.id <- paste(series.base,series,sep="=")
file.type <- get.fileType()
meta.url <- paste(api,series.id,file.typesep="&")
return(fromJSON(meta.url))
}
test <- get.metadata('DGORDER')
test
get.metadata <- function(series) {
# pulls information about series from API
# needs restructured
base <- get.dirURL()
key <- get.APIKey()
api <- paste(base,key,sep="?")
series.base <- "series_id"
series.id <- paste(series.base,series,sep="=")
file.type <- get.fileType()
meta.url <- paste(api,series.id,file.typesep="&")
return(fromJSON(meta.url))
}
test <- get.metadata('DGORDER')
test
get.metadata <- function(series) {
# pulls information about series from API
# needs restructured
base <- get.dirURL()
key <- get.APIKey()
api <- paste(base,key,sep="?")
series.base <- "series_id"
series.id <- paste(series.base,series.id,sep="=")
file.type <- get.fileType()
meta.url <- paste(api,series.id,file.typesep="&")
return(fromJSON(meta.url))
}
test <- get.metadata('DGORDER')
get.metadata <- function(series) {
# pulls information about series from API
# needs restructured
base <- get.dirURL()
key <- get.APIKey()
api <- paste(base,key,sep="?")
series.base <- "series_id"
series.id <- paste(series.base,series,sep="=")
file.type <- get.fileType()
meta.url <- paste(api,series.id,file.type,sep="&")
return(fromJSON(meta.url))
}
test <- get.metadata('DGORDER')
test
get.metadata <- function(series) {
# pulls information about series from API
# needs restructured
base <- get.dirURL()
print(base)
key <- get.APIKey()
print(key)
api <- paste(base,key,sep="?")
print(api)
series.base <- "series_id"
series.id <- paste(series.base,series,sep="=")
print(series.id)
file.type <- get.fileType()
print(file.type)
meta.url <- paste(api,series.id,file.type,sep="&")
print(meta.url)
return(fromJSON(meta.url))
}
test <- get.metadata('DGORDER')
source('~/scripts/error_checking/api_loader.R')
test <- get.metadata('DGORDER')
source('~/scripts/error_checking/api_loader.R')
test <- get.metadata('DGORDER')
test
source('~/scripts/error_checking/api_loader.R')
test <- get.finalURL()
test
set.finalURL<- function() {
base <- get.typeURL()
key <- get.APIKey()
api <- paste(base,key,sep="?")
file.type <- get.fileType()
url <- paste(api,file.type,sep="&")
return(url)
}
get.finalURL <- function() {
return(set.finalURL())
}
test <- get.finalURL()
test
get.JSON <- function(id) {
base<- get.finalURL()
series<- paste(base,'&series_id=',id,sep="")
return(fromJSON(series))
}
test <- get.JSON('DGORDER')
test
source('~/scripts/error_checking/novelty_detection.R')
source('~/scripts/error_checking/novelty_detection.R')
View(data)
View(window)
test
source('~/scripts/error_checking/api_loader.R')
test <- get.JSON('dgorder')
test
series <- get.data(test)
View(series)
